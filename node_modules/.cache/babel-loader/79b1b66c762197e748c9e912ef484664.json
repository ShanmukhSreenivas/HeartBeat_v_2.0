{"ast":null,"code":"var _jsxFileName = \"/Users/shanmukhasreenivas/Documents/Files/heartbeat-v_2.0/src/components/gauge_final.js\";\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gauge({\n  max,\n  lim,\n  value\n}) {\n  const segmentstop = (min, max, lim, value) => {\n    const segment_stops = [];\n    const segment_colors = [];\n    const segment_labels = [];\n\n    if (lim > value) {\n      segment_stops = [min, min + 1, value, lim, lim + 1, max - 1, max];\n      segment_colors = ['#ff7e00', '#ff7e00', '#edeceb', 'black', '#edeceb', '#edeceb'];\n      segment_labels = [{\n        text: {\n          min\n        },\n        position: 'OUTSIDE',\n        color: \"black\"\n      }, {\n        color: \"white\"\n      }, {\n        color: \"white\"\n      }, {\n        color: \"white\"\n      }, {\n        color: \"white\"\n      }, {\n        text: {\n          max\n        },\n        position: 'OUTSIDE',\n        color: \"black\"\n      }];\n    } else if (lim == value) {\n      segment_stops = [min, min + 1, lim, lim + 1, max - 1, max];\n      segment_colors = ['green', 'green', 'black', '#edeceb', '#edeceb'];\n      segment_labels = [{\n        text: {\n          min\n        },\n        position: 'OUTSIDE',\n        color: \"black\"\n      }, {\n        color: \"white\"\n      }, {\n        color: \"white\"\n      }, {\n        color: \"white\"\n      }, {\n        text: {\n          max\n        },\n        position: 'OUTSIDE',\n        color: \"black\"\n      }];\n    } else {\n      segment_stops = [min, min + 1, lim, lim + 1, value, max - 1, max];\n      segment_colors = ['red', 'red', 'black', 'red', '#edeceb', '#edeceb'];\n    }\n\n    return [segment_stops, segment_colors];\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactSpeedometer, {\n    width: 150,\n    height: 100,\n    ringWidth: 20,\n    minValue: 0,\n    maxValue: 303,\n    value: 120,\n    segments: 2,\n    needleHeightRatio: 0.7,\n    needleColor: \"white\",\n    customSegmentStops: [0, 1, 130, 132, 302, 303],\n    customSegmentLabels: [{\n      text: \"0\",\n      position: 'OUTSIDE',\n      color: \"black\"\n    }, {\n      color: \"white\"\n    }, {\n      color: \"white\"\n    }, {\n      color: \"white\"\n    }, {\n      text: \"303\",\n      position: 'OUTSIDE',\n      color: \"black\"\n    }],\n    segmentColors: ['#ff7e00', '#ff7e00', 'black', '#edeceb', '#edeceb'],\n    maxSegmentLabels: 1,\n    needleHeightRatio: 0.2,\n    valueTextFontSize: \"14px\",\n    labelFontSize: \"10px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Gauge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gauge\");","map":{"version":3,"sources":["/Users/shanmukhasreenivas/Documents/Files/heartbeat-v_2.0/src/components/gauge_final.js"],"names":["ReactSpeedometer","Gauge","max","lim","value","segmentstop","min","segment_stops","segment_colors","segment_labels","text","position","color"],"mappings":"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","sourcesContent":["import ReactSpeedometer from \"react-d3-speedometer\"\n\nexport default function Gauge({ max, lim, value}) {\n\n    const segmentstop = (min,max,lim,value) => {\n        const segment_stops = []\n        const segment_colors = []\n        const segment_labels = []\n        if(lim > value){\n            segment_stops = [min,min+1,value,lim,lim+1,max-1,max]\n            segment_colors = ['#ff7e00','#ff7e00','#edeceb','black','#edeceb','#edeceb']\n            segment_labels = [{ text:{min},position:'OUTSIDE',color:\"black\"},{color:\"white\"},{color:\"white\"},{color:\"white\"},{color:\"white\"},{ text:{max},position:'OUTSIDE',color:\"black\"}]\n        }\n        else if(lim == value){\n            segment_stops = [min,min+1,lim,lim+1,max-1,max]\n            segment_colors = ['green','green','black','#edeceb','#edeceb']\n            segment_labels = [{ text:{min},position:'OUTSIDE',color:\"black\"},{color:\"white\"},{color:\"white\"},{color:\"white\"},{ text:{max},position:'OUTSIDE',color:\"black\"}]            \n        }\n        else{\n            segment_stops = [min,min+1,lim,lim+1,value,max-1,max]\n            segment_colors = ['red','red','black','red','#edeceb','#edeceb']            \n        }\n        return [segment_stops,segment_colors]\n    }\n\nreturn(  \n    \n  \n    <ReactSpeedometer\n        width={150}\n        height={100}\n        ringWidth={20} \n        minValue={0}\n        maxValue={303}\n        value={120}    \n        segments={2}\n        needleHeightRatio={0.7}\n        needleColor=\"white\"\n        customSegmentStops={[0,1,130,132,302,303]}\n        customSegmentLabels={[{ text:\"0\",position:'OUTSIDE',color:\"black\"},{color:\"white\"},{color:\"white\"},{color:\"white\"},{ text:\"303\",position:'OUTSIDE',color:\"black\"}]}\n        segmentColors={['#ff7e00','#ff7e00','black','#edeceb','#edeceb']}\n        maxSegmentLabels={1}\n        needleHeightRatio={0.2}\n        valueTextFontSize='14px'\n        labelFontSize='10px'\n    />\n);\n}"]},"metadata":{},"sourceType":"module"}